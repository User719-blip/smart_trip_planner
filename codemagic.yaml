workflows:
  android-workflow:
    name: Android Workflow
    environment:
      flutter: stable
      xcode: latest
      cocoapods: default
    scripts:
      - name: Clean project
        script: flutter clean
      - name: Get Flutter packages
        script: flutter pub get
        
      - name: Check Flutter doctor
        script: flutter doctor -v
        
      - name: Check Android setup
        script: |
          echo "=== Android SDK info ==="
          echo "ANDROID_HOME: $ANDROID_HOME"
          echo "ANDROID_SDK_ROOT: $ANDROID_SDK_ROOT"
          ls -la $ANDROID_HOME 2>/dev/null || echo "Android SDK not found"
          
      - name: Build APK with Gradle logs
        script: |
          echo "=== Starting Flutter build ==="
          flutter build apk --release --verbose 2>&1 | tee flutter_build.log
          BUILD_EXIT_CODE=${PIPESTATUS[0]}
          echo "Flutter build exit code: $BUILD_EXIT_CODE"
          
          if [ $BUILD_EXIT_CODE -ne 0 ]; then
            echo "=== Flutter build failed, showing logs ==="
            tail -50 flutter_build.log
            exit $BUILD_EXIT_CODE
          fi
          
      - name: Run Gradle directly for more info
        script: |
          echo "=== Running Gradle directly ==="
          cd android
          ./gradlew assembleRelease --stacktrace --info 2>&1 | tee ../gradle_direct.log
          GRADLE_EXIT_CODE=$?
          cd ..
          
          echo "Gradle direct exit code: $GRADLE_EXIT_CODE"
          if [ $GRADLE_EXIT_CODE -ne 0 ]; then
            echo "=== Gradle failed, showing detailed logs ==="
            tail -100 gradle_direct.log
            exit $GRADLE_EXIT_CODE
          fi
          
      - name: Check all possible output locations
        script: |
          echo "=== Comprehensive output search ==="
          echo "Current directory: $(pwd)"
          
          # Check Flutter build outputs
          find . -name "*.apk" -type f 2>/dev/null | while read apk_file; do
            echo "Found APK: $apk_file ($(ls -lh "$apk_file" | awk '{print $5}'))"
          done
          
          # Check Android build outputs
          if [ -d android/app/build ]; then
            echo "=== Android app build directory ==="
            find android/app/build -name "*.apk" -type f 2>/dev/null
          fi
          
          # Check Flutter build outputs
          if [ -d build ]; then
            echo "=== Flutter build directory ==="
            find build -name "*.apk" -type f 2>/dev/null
          fi
          
          # List all directories to see structure
          echo "=== Project structure ==="
          ls -la
          
          echo "=== Build directory structure ==="
          ls -la build/ 2>/dev/null || echo "No build directory"
          
          echo "=== Android build structure ==="
          ls -la android/app/build/outputs/ 2>/dev/null || echo "No android build outputs"
          
    artifacts:
      - "**/*.apk"
      - flutter_build.log
      - gradle_direct.log
      - build/**/*
      - android/app/build/outputs/**/*